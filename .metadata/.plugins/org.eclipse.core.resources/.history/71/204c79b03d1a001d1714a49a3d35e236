package frontEnd;

import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.NumberFormat;
import java.util.Locale;

import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JSeparator;
import javax.swing.JTextField;
import javax.swing.JToggleButton;

import backEnd.Model;
import backEnd.User;

public class WelcomeNDeposit extends JFrame implements ActionListener {

	JLabel userId, message, notePs, personalOpeningMsg, busOpenMsg, 
	commOpenMsg, accountMsg, balanceMsg;
	JButton depositButton, mainMenu;
	JToggleButton personal, business, community;
	ButtonGroup accountTypeGrp; 
	JTextField orgName, depositAmount;
	JSeparator sep, sep1;

	int min = 10000001;
	int max = 99999999;
	int accountNo = (int) Math.floor(Math.random() * (max - min + 1) + min);
	double overdraft = 0;  
	double balance, amount; 
	

	Connection con = Model.connect();
	Statement stmt;
	ResultSet rs;
	String companyName, communityName;
	int userid;

	public WelcomeNDeposit(User user) {

		this.setSize(600, 600);
		this.setTitle("Welcome");
		this.setLayout(null);

		userId = new JLabel("User ID: " + user.id);
		userId.setSize(250, 30);
		userId.setLocation(350, 15);

		message = new JLabel("<Html>Welcome " + user.title + " " + user.lastName + "<p><br> "
				+ "Please select if you are applying as an individual, Business or Community Centre</p></Html?");
		message.setSize(540, 180);
		message.setLocation(10, 20);
		
		personal = new JToggleButton("Personal");
		personal.setText("Individual");
		personal.setSize(120, 40);
		personal.setLocation(80, 135);
		personal.addActionListener(this);
		this.add(personal);

		business = new JToggleButton();
		business.setText("Business");
		business.setSize(120, 40);
		business.setLocation(80, 170);
		business.addActionListener(this);
		this.add(business);

		community = new JToggleButton();
		community.setText("Community");
		community.setSize(120, 40);
		community.setLocation(80, 200);
		community.addActionListener(this);
		this.add(community);
		
		accountTypeGrp = new ButtonGroup(); 
		accountTypeGrp.add(personal);
		accountTypeGrp.add(business);
		accountTypeGrp.add(community);

		notePs = new JLabel("Ps. You will be able to add other type of accounts later");
		notePs.setSize(500, 50);
		notePs.setLocation(50, 230);
		this.add(notePs);

		sep = new JSeparator();
		sep.setSize(420, 15);
		sep.setLocation(70, 270);

		personalOpeningMsg = new JLabel("<html>You are qualified to £1,500 overdraft facility, "
				+ "with an inital deposit of £1,500<p>                     </p></html?");
		personalOpeningMsg.setSize(540, 50);
		personalOpeningMsg.setLocation(30, 280);
		personalOpeningMsg.setVisible(false);

		busOpenMsg = new JLabel("<html>Your Business qualifies to £2,500 overdraft facility, "
				+ "with an inital deposit of £2,500<p><br>What is the name of your Company?</p></html>");
		busOpenMsg.setSize(540, 50);
		busOpenMsg.setLocation(30, 280);
		busOpenMsg.setVisible(false);

		commOpenMsg = new JLabel("<html>Your Community Centre qualifies to £1,000 overdraft facility, "
				+ "with an inital deposit of £1,000<p> <br> Please provide the Community Centre name "
				+ "below </p></html>");
		commOpenMsg.setSize(540, 50);
		commOpenMsg.setLocation(30, 280);
		commOpenMsg.setVisible(false);

		orgName = new JTextField();
		orgName.setSize(240, 25);
		orgName.setLocation(250, 305);
		orgName.setVisible(false);

		accountMsg = new JLabel("How much would you like to deposit?");
		accountMsg.setSize(210, 50);
		accountMsg.setLocation(30, 330);
		accountMsg.setVisible(false);

		depositAmount = new JTextField("0"); 
		depositAmount.setSize(220, 25);
		depositAmount.setLocation(260, 340);
		depositAmount.setVisible(false);
//		depositAmount.addKeyListener(new KeyAdapter() {
//			public void keyTyped(KeyEvent e3) {
//				char c = e3.getKeyChar();
//				if (((c < '0') || (c > '9')) && (c != KeyEvent.VK_BACK_SPACE)) {
//					e3.consume(); // if it's not a number, ignore the event
//				}
//			}
//		});
		this.add(depositAmount);
		
		depositButton = new JButton();
		depositButton.setText("Deposit");
		depositButton.setSize(120, 40);
		depositButton.setLocation(200, 370);
		depositButton.addActionListener(this);
		depositButton.setVisible(false);
		this.add(depositButton);

		sep1 = new JSeparator();
		sep1.setSize(420, 20);
		sep1.setLocation(60, 420);
		sep1.setVisible(false);
		
		balanceMsg = new JLabel();
		balanceMsg.setSize(450, 150); 
		balanceMsg.setLocation(30, 380); 
		balanceMsg.setVisible(false);
		
		mainMenu = new JButton("<html> Main <br> Menu</html>");
		mainMenu.setSize(120, 50);
		mainMenu.setLocation(305, 480);
		mainMenu.setVisible(false);
		mainMenu.addActionListener(this);
		
		this.add(userId);
		this.add(message);
		this.add(personal);
		this.add(business);
		this.add(community);
		this.add(personalOpeningMsg);
		this.add(busOpenMsg);
		this.add(commOpenMsg);
		this.add(orgName);
		this.add(accountMsg);

		this.setVisible(true);

		this.add(sep);
		this.add(sep1);
		
		this.add(mainMenu);
		this.add(balanceMsg);
		
		userid = user.id;
		
	}
	
	private void onAccountTypeClicked(int overdraft) {
		accountMsg.setVisible(true);
		depositAmount.setVisible(true);
		depositButton.setVisible(true);
		mainMenu.setVisible(true);

		personalOpeningMsg.setVisible(false);
		busOpenMsg.setVisible(false);
		orgName.setVisible(false);
		commOpenMsg.setVisible(false);
		orgName.setVisible(false);
	}

	private void onPersonalClicked() {
		onAccountTypeClicked(1500);
		personalOpeningMsg.setVisible(true);
	}

	private void onBusinessClicked() {
		onAccountTypeClicked(2500);
		companyName = accountMsg.getText();
		busOpenMsg.setVisible(true);
		orgName.setVisible(true);
	}

	private void onCommunityClicked() {
		onAccountTypeClicked(1000);
		communityName = accountMsg.getText();
		commOpenMsg.setVisible(true);
		orgName.setVisible(true);
	}
	
	private void onDepositClicked(int overdraft) {
		amount = Double.parseDouble(depositAmount.getText());
		balance = overdraft + amount;  
		balanceMsg.setText("<html> Your SortCode is 12-34-56, Account number is"
				+ " " + accountNo +"<p><br> Your available balance is £" +  balance);		

		sep1.setVisible(true);
		balanceMsg.setVisible(true);		
	}
	
	private void onMenuClicked() {
		String sql ="Update bankingAccountsNBalances SET companyName = ?, "
				+ "communityName = ?, "
				+ "account1Number = ?, "
				+ "account1Balance = ? "
				+ "WHERE id = ?";
		try {
			PreparedStatement pst =con .prepareStatement(sql);
			pst.setString (1, companyName);
			pst.setString(2, communityName);
			pst.setInt(3, accountNo);
			pst.setDouble(4, balance);
			pst.setInt(5, userid);
			pst.executeUpdate();
			System.out.print("working?");
			
			
		} catch (Exception e1) {
			System.out.println(e1.getMessage());
		}
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == personal) {
			this.onPersonalClicked();
		} else if (e.getSource() == business) {
			this.onBusinessClicked();
		} else if (e.getSource() == community) {
			this.onCommunityClicked();
		} else if (e.getSource() == depositButton) {
			this.onDepositClicked();
		} else if (e.getSource() == mainMenu) {
			this.onMenuClicked();
		}
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		new WelcomeNDeposit(null);

	}

}
